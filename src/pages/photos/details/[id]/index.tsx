import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Header from "@/components/header/Header";
import Results from "@/components/results/Results";
import { GetServerSideProps } from "next";
import type { DetailsPhotosPageProps } from "@/types/types";
import styles from "@/styles/Home.module.css";
import Details from "@/components/details/Details";

function PhotosPage({ data }: { data: DetailsPhotosPageProps }) {
  const [keyWord, setKeyWord] = useState("");
  const [perPage, setPerPage] = useState("4");
  const [currentPage, setCurrentPage] = useState("1");
  const router = useRouter();

  useEffect(() => {
    const searchValue = localStorage.getItem("keyWord") || "";
    setKeyWord(searchValue);
    const perPageValue = localStorage.getItem("perPage") || "4";
    setPerPage(perPageValue);
    const currentPageValue = localStorage.getItem("currentPage") || "1";
    setCurrentPage(currentPageValue);
  }, []);

  // useEffect(() => {
  //   if (keyWord) {
  //     router.push(
  //       `/photos/?query=${keyWord}&page=${currentPage}&per_page=${perPage}`,
  //       undefined,
  //       { shallow: false },
  //     );
  //   }
  // }, [keyWord, currentPage, perPage]);

  function handleSubmit(value: string) {
    if (value === keyWord) return;
    if (value === "") {
      router.push("/random");
    }
    localStorage.setItem("keyWord", value);
    setKeyWord(value);
    setCurrentPage("1");
    localStorage.setItem("currentPage", "1");
  }

  function handlePerPageChange(value: string) {
    if (value === perPage) return;
    localStorage.setItem("perPage", value);
    setPerPage(value);
    setCurrentPage("1");
    localStorage.setItem("currentPage", "1");
  }

  const total = data.pageData.total
    ? data.pageData.total < 120
      ? data.pageData.total
      : 120
    : 0;

  const totalPagesNumber = Math.ceil(total / +perPage);

  function handlePageNumberChange(value: string) {
    if (value === currentPage) return;
    setCurrentPage(value);
    localStorage.setItem("currentPage", value);
  }

  const results = data.pageData.results;

  return (
    <>
      <Head>
        <title>Find Images on Unsplash</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <p style={{ color: "red", padding: "10px 0" }}>
        <b>Module05 is not finished. Please check later!</b>
      </p>
      <Header
        keyWord={keyWord}
        perPage={perPage}
        onSubmit={handleSubmit}
        onPerPageChange={handlePerPageChange}
      />
      <main className={styles.main}>
        <Results
          pageType="photos"
          totalPagesNumber={totalPagesNumber}
          currentPage={currentPage}
          data={results}
          onPageChange={handlePageNumberChange}
        />
        <Details pageType="photos" details={data.detailsData} />
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<{
  data: DetailsPhotosPageProps;
}> = async (context) => {
  console.log(context.query);
  const CLIENT_ID = "cfdYGk4NiOtEue__iSqawbVIwnqHm03dnyVqT6cLXLg";
  const basicUrl = "https://api.unsplash.com/";

  const { query, page, per_page, id } = context.query;
  const pageUrl = `${basicUrl}search/photos/?query=${query}&page=${page}&per_page=${per_page}&client_id=${CLIENT_ID}`;
  const detailsUrl = `${basicUrl}photos/${id}/?client_id=${CLIENT_ID}`;

  function getPage() {
    return fetch(pageUrl).then((res) => res.json());
  }
  function getDetails() {
    return fetch(detailsUrl).then((res) => res.json());
  }

  const [pageData, detailsData] = await Promise.all([getPage(), getDetails()]);

  return { props: { data: { pageData: pageData, detailsData: detailsData } } };
};

export default PhotosPage;
